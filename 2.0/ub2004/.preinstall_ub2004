# ubuntu 20.04
apt update -y -qqq
apt install -y bash wget ca-certificates curl git
apt upgrade -y bash wget ca-certificates curl git
ln -svf bash /bin/sh

ln -svf ../usr/share/zoneinfo/UTC /etc/localtime
DEBIAN_FRONTEND=noninteractive apt install -y tzdata
dpkg-reconfigure --frontend noninteractive tzdata

apt install -y binutils coreutils util-linux findutils diffutils patch sed gawk grep file tar gzip bzip2 xz-utils
apt install -y libc-bin passwd pkg-config groff-base
apt install -y zlib1g-dev libzstd-dev liblzma-dev libbz2-dev tar gzip bzip2 xz-utils
apt install -y libssl-dev openssl procps iproute2 net-tools iputils-ping vim bind9-dnsutils libxml2-utils
apt install -y daemon procps psmisc net-tools
apt install -y lsof strace sysstat tcpdump
apt install -y make gcc g++ perl libperl-dev groff-base dpkg-dev cmake m4 gperf
# build from src
apt install -y autoconf autoconf-archive autogen automake autopoint autotools-dev libtool m4 bison flex
# build openssl 1.1.1
apt install -y libsctp-dev
# build nginx
apt install -y bc uuid-dev libgd-dev libxslt1-dev libxml2-dev libpcre2-dev libpcre3-dev libpng-dev libjpeg-dev
# build pinentry (gnupg)
apt install -y libncurses-dev libreadline-dev libldap2-dev libsqlite3-dev libusb-1.0-0-dev libsecret-1-dev
# build openssh
apt install -y libedit-dev libssh2-1-dev libpam0g-dev libsystemd-dev groff-base
# build haproxy
apt install -y libsystemd-dev libcrypt-dev

# run mysql8-linux-glibc2.17
apt install -y libncursesw5 libtinfo5 libncurses5

# run keepalived
apt install -y libnl-3-200 libnl-genl-3-200 libsnmp-dev libnftnl11 libsystemd0
apt install -y libnftables-dev nftables
apt install -y libipset-dev ipset
apt install -y iptables
apt install -y libsnmp-dev libmnl-dev libnftnl-dev libnl-3-dev libnl-genl-3-dev libnfnetlink-dev

# build nettle for gnutls
apt install -y libgmp-dev
# build gnutls for chrony
apt install -y libp11-kit-dev libidn2-dev
# build chrony
apt install -y libseccomp-dev libcap-dev
# build libfido2
apt install -y libcbor-dev libpcsclite-dev

apt install -y daemon procps psmisc net-tools chrpath libtasn1-6-dev gettext
apt install -y libnftables-dev nftables || : 
apt install -y libipset-dev ipset || : 
apt install -y iptables || : 
apt install -y libsnmp-dev libmnl-dev libnftnl-dev libnl-3-dev libnl-genl-3-dev libnfnetlink-dev || : 

apt upgrade -y
/sbin/ldconfig
[[ -e /etc/ssl/cert.pem ]] || ln -svf certs/ca-certificates.crt /etc/ssl/cert.pem

#################################################################################
_install_git() {
    set -e
    _tmp_dir="$(mktemp -d)"
    cd "${_tmp_dir}"
    _release_ver="$(wget -qO- "https://github.com/icebluey/build-git/releases/" | grep -i '<a href="/.*/tree/' | sed 's|"|\n|g' | grep '/tree/' | sed -e 's|.*/tree/||g' | grep -iv -E 'alpha|beta|rc' | sort -V | tail -n 1)"
    _dl_path="$(wget -qO- "https://github.com/icebluey/build-git/releases/expanded_assets/${_release_ver}" | grep -i "<a href=.*/releases/download/${_release_ver}/" | sed 's|"|\n|g' | grep -i "/releases/download/${_release_ver}/"  | grep -iv -E 'alpha|beta|rc' | grep -i 'amd64.*xz$' | sort -V | tail -n 1)"
    wget -c -t 9 -T 9 "https://github.com${_dl_path}"
    rm -fr /usr/lib/git-core
    rm -fr /usr/lib/x86_64-linux-gnu/git/private
    tar -xof *.tar* -C /
    sleep 1
    cd /tmp
    rm -fr "${_tmp_dir}"
    /sbin/ldconfig
    _release_ver='' ; _dl_path=''
}
_install_curl() {
    set -e
    _tmp_dir="$(mktemp -d)"
    cd "${_tmp_dir}"
    _release_ver="$(wget -qO- "https://github.com/icebluey/build-curl/releases/" | grep -i '<a href="/.*/tree/' | sed 's|"|\n|g' | grep '/tree/' | sed -e 's|.*/tree/||g' | grep -iv -E 'alpha|beta|rc' | sort -V | tail -n 1)"
    _dl_path="$(wget -qO- "https://github.com/icebluey/build-curl/releases/expanded_assets/${_release_ver}" | grep -i "<a href=.*/releases/download/${_release_ver}/" | sed 's|"|\n|g' | grep -i "/releases/download/${_release_ver}/"  | grep -iv -E 'alpha|beta|rc' | grep -i 'amd64.*xz$' | sort -V | tail -n 1)"
    wget -c -t 9 -T 9 "https://github.com${_dl_path}"
    rm -fr /usr/lib/x86_64-linux-gnu/curl/private
    tar -xof *.tar* -C /
    sleep 1
    cd /tmp
    rm -fr "${_tmp_dir}"
    /sbin/ldconfig
    _release_ver='' ; _dl_path=''
}
_install_wget() {
    set -e
    _tmp_dir="$(mktemp -d)"
    cd "${_tmp_dir}"
    _release_ver="$(wget -qO- "https://github.com/icebluey/build-wget/releases/" | grep -i '<a href="/.*/tree/' | sed 's|"|\n|g' | grep '/tree/' | sed -e 's|.*/tree/||g' | grep -iv -E 'alpha|beta|rc' | sort -V | tail -n 1)"
    _dl_path="$(wget -qO- "https://github.com/icebluey/build-wget/releases/expanded_assets/${_release_ver}" | grep -i "<a href=.*/releases/download/${_release_ver}/" | sed 's|"|\n|g' | grep -i "/releases/download/${_release_ver}/"  | grep -iv -E 'alpha|beta|rc' | grep -i 'amd64.*xz$' | sort -V | tail -n 1)"
    wget -c -t 9 -T 9 "https://github.com${_dl_path}"
    rm -fr /usr/lib/x86_64-linux-gnu/wget/
    tar -xof *.tar* -C /
    sleep 1
    cd /tmp
    rm -fr "${_tmp_dir}"
    /sbin/ldconfig
    _release_ver='' ; _dl_path=''
}

#_install_git
#_install_curl
#_install_wget
#################################################################################

exit
